{"ast":null,"code":"var _jsxFileName = \"/home/preston_howell/course_work/Week_5/Project_5/src/components/Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport NavBar from './navbar';\nimport { Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThatsBazaar = () => {\n  _s();\n  // ------Passing Account information into API state\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function accountHandler(event) {\n    event.preventDefault();\n    try {\n      const accountResponse = await fetch('https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft/users/register', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      });\n      const accountData = await accountResponse.json();\n      console.log('this is our translated data: ', data);\n      localStorage.setItem('token', accountData.data.token);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  // -------Functions for updating USERNAME and PASSWORD variables from input tags\n\n  function updateUsernameState(event) {\n    setUsername(event.target.value);\n  }\n  function updatePasswordState(event) {\n    setPassword(event.target.value);\n  }\n\n  // -------Grabbing information from API\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    async function fetchProducts() {\n      try {\n        const response = await fetch(\"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft/posts\");\n        const info = await response.json();\n        console.log(info.data.posts);\n        setProducts(info.data.posts);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"That's Bazaar!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: accountHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Username Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: updateUsernameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Password Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: updatePasswordState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register for a New Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(ThatsBazaar, \"Y41wPt4SEu/V5rM3MT1kNNZNW6A=\");\n_c = ThatsBazaar;\nexport default ThatsBazaar;\nvar _c;\n$RefreshReg$(_c, \"ThatsBazaar\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","NavBar","Outlet","ThatsBazaar","username","setUsername","password","setPassword","accountHandler","event","preventDefault","accountResponse","fetch","method","headers","body","JSON","stringify","user","accountData","json","console","log","data","localStorage","setItem","token","error","updateUsernameState","target","value","updatePasswordState","products","setProducts","fetchProducts","response","info","posts"],"sources":["/home/preston_howell/course_work/Week_5/Project_5/src/components/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport NavBar from './navbar';\nimport { Outlet } from 'react-router-dom'\n\nconst ThatsBazaar = () => {\n// ------Passing Account information into API state\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    async function accountHandler (event) {\n        event.preventDefault();\n        try{\n            const accountResponse = await fetch('https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft/users/register',\n            {\n                method: 'POST',\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    user: {\n                        username: username,\n                        password: password,\n                    }\n                })\n            })\n            const accountData = await accountResponse.json();\n            console.log('this is our translated data: ', data)\n            localStorage.setItem('token', accountData.data.token)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n// -------Functions for updating USERNAME and PASSWORD variables from input tags\n\n    function updateUsernameState(event) {\n        setUsername(event.target.value)\n    }\n\n    function updatePasswordState(event) {\n        setPassword(event.target.value)\n    }\n\n// -------Grabbing information from API\n    const [products, setProducts] = useState([])\n\n    useEffect(() => {\n        \n        async function fetchProducts () {\n            try{\n                const response = await fetch(\"https://strangers-things.herokuapp.com/api/2209-ftb-mt-web-ft/posts\")\n                const info = await response.json();\n\n                console.log(info.data.posts)\n                setProducts(info.data.posts)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        fetchProducts();\n    },[])\n\n    return(\n        <div>\n            <h1>That's Bazaar!</h1>\n{/* ==========================Account Register================================== */}\n            <form onSubmit={accountHandler}>\n\n                <label>Enter Username Here</label>\n                <input type= 'text' value= {username} onChange= {updateUsernameState}></input>\n\n                \n\n                <label>Enter Password Here</label>\n                <input type= 'text' value= {password} onChange= {updatePasswordState}></input>\n\n                <br/>\n\n                <button type= \"submit\">Register for a New Account</button>\n            </form>\n\n            <NavBar />\n{/* ==========================Main View Window================================== */}\n            <Outlet />\n        </div>\n    )\n}\n\nexport default ThatsBazaar"],"mappings":"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"},"metadata":{},"sourceType":"module"}